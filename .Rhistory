url <-"https://github.com/CSSEGISandData/COVID-19/raw/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv"
library(tidyverse)
confirmed <- read_csv(url)
View(confirmed)
url <-"https://github.com/CSSEGISandData/COVID-19/raw/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv"
confirmed <- read_csv(url)
View(confirmed)
confirmed_wide <- confirmed %>%
pivot_wider(cols=`1/22/20`:ncol(confirmed), names_to="date", values="confirmed")
confirmed_wide <- confirmed %>%
pivot_wider(cols=12:945, names_to="date", values="confirmed")
confirmed_wide <- confirmed %>%
pivot_wider(cols=`1/22/20`:nrow(confirmed), names_to="date", values_to="confirmed")
confirmed_long <- confirmed %>%
pivot_longer(cols=`1/22/20`:nrow(confirmed), names_to="date", values_to="confirmed")
confirmed_long <- confirmed %>%
pivot_longer(cols=`1/22/20`:ncol(confirmed), names_to="date", values_to="confirmed")
View(confirmed_long)
library(lubridate)
confirmed_long <- confirmed %>%
pivot_longer(cols=`1/22/20`:ncol(confirmed), names_to="date", values_to="confirmed") %>%
mutate(date=mdy(date))
View(confirmed_long)
confirmed_long <- confirmed %>%
pivot_longer(cols=`1/22/20`:ncol(confirmed), names_to="date", values_to="confirmed") %>%
mutate(date=mdy(date)) %>%
group_by(Country_Region, date) %>%
summarize(confirmed=sum(confirmed, na.rm=T))
View(confirmed_long)
confirmed_long <- confirmed %>%
pivot_longer(cols=`1/22/20`:ncol(confirmed), names_to="date", values_to="confirmed") %>%
mutate(date=mdy(date)) %>%
group_by(Country_Region, date) %>%
summarize(confirmed=sum(confirmed, na.rm=T)) %>%
mutate(daily=confirmed - lag(confirmed, 1))
ggplot(aes(x=date, y=daily)) + geom_line()
ggplot(confirmed_long, aes(x=date, y=daily)) + geom_line()
View(confirmed_long)
for (i in 2020:2022) {
for (x in 1:12) {
if (nchar(x)==1) {
month <- paste0("0", x)
} else {
month <- as.character(x)
}
df <- filter(confirmed_long,
year(date)==i & month(date)==x)
write_csv(df, paste0("covid_data/", i, "-", month, ".csv"), na="")
print(paste0("covid_data/", i, "-", month))
}
}
test <- read_csv("covid_data/2022-12.csv")
View(test)
list.files("covid_data")
df1 <- read_csv("covid_data/2020-01.csv")
df2 <- read_csv("covid_data/2020-02.csv")
View(df1)
View(df2)
states <- c("Texas", "Florida", "California", "New York", "Indiana", "Maine")
for (arbitrary_name in states) {
print(arbitrary_name)
}
states <- c("Texas", "Florida", "California", "New York", "Indiana", "Maine")
for (i in 1:length(states)) {
print(str_c(i, "-" states[i], ". next: ," states[i+1]))
}
states <- c("Texas", "Florida", "California", "New York", "Indiana", "Maine")
for (i in 1:length(states)) {
print(str_c(i, "-" states[i], ". next: ," states[i+1]))
}
i
i <- 1
states <- c("Texas", "Florida", "California", "New York", "Indiana", "Maine")
print(str_c(i, "-" states[i], ". next: ," states[i+1]))
?str_c
i
(str_c(i, "-" states[i])
str_c(i, "-" states[i])
for (i in 1:length(states)) {
print(str_c(i, "-", states[i], ". next: ," states[i+1]))
}
print(str_c(i, "-", states[i], ". next: ," states[i+1]))
print(str_c(i, "-", states[i], ". next: ,", states[i+1]))
states <- c("Texas", "Florida", "California", "New York", "Indiana", "Maine")
for (i in 1:length(states)) {
print(str_c(i, "-", states[i], ". next: ", states[i+1]))
}
states <- c("Texas", "Florida", "California", "New York", "Indiana", "Maine")
for (i in 1:length(states)) {
print(str_c(i, "-", states[i]))
}
states <- c("Texas", "Florida", "California", "New York", "Indiana", "Maine")
for (i in 1:length(states)) {
print(str_c("array object ," i, " is ", states[i]))
}
str_c("array object ," i, " is ", states[i])
i
print(str_c("array object ,", i, " is ", states[i]))
for (i in 1:length(states)) {
print(str_c("array object ", i, " is ", states[i]))
}
?list.files
list.files("covid_data")
list.files("covid_data", include.dirs=TRUE)
list.files("covid_data", full.names = =TRUE)
list.files("covid_data", full.names =TRUE)
sheets <- list.files("covid_data", full.names =TRUE)
sheets
length(sheets)
for (i in 1:length(sheets)) {
read_csv(sheets[i])
}
for (i in 1:_____(sheets)) {
read_csv(sheets[i])
print(sheets[i])
}
for (i in 1:length(sheets)) {
read_csv(sheets[i])
print(sheets[i])
}
for (i in 1:length(sheets)) {
df <- read_csv(sheets[i])
# if first time looping, save df as big_df
if (i==1) {
big_df <- df
} else {
# if not the first time looping, then rbind it to big_df
big_df <- rbind(big_df, df)
}
print(nrow(big_df))
}
View(big_df)
library(doParallel)
install.packages("doParallel")
library(doParallel)
registerDoParallel() # registered the parallel backend?
?detectCores
detectCores()
registerDoParallel(cores=10)
system(time) {
for (i in 1:length(sheets)) {
df <- read_csv(sheets[i])
# if first time looping, save df as big_df
if (i==1) {
big_df <- df
} else {
# if not the first time looping, then rbind it to big_df
big_df <- rbind(big_df, df)
}
print(nrow(big_df))
}
}
system(time) {
for (i in 1:length(sheets)) {
df <- read_csv(sheets[i])
# if first time looping, save df as big_df
if (i==1) {
big_df <- df
} else {system.time(
for (i in 1:length(sheets)) {
df <- read_csv(sheets[i])
# if first time looping, save df as big_df
if (i==1) {
big_df <- df
} else {
# if not the first time looping, then rbind it to big_df
big_df <- rbind(big_df, df)
}
print(nrow(big_df))
}
)
# if not the first time looping, then rbind it to big_df
big_df <- rbind(big_df, df)
}
#print(nrow(big_df))
}
}
system.time(
for (i in 1:length(sheets)) {
df <- read_csv(sheets[i])
# if first time looping, save df as big_df
if (i==1) {
big_df <- df
} else {
# if not the first time looping, then rbind it to big_df
big_df <- rbind(big_df, df)
}
print(nrow(big_df))
}
)
big_df <- foreach(i=1:length(sheets), .combine=rbind) %dopar% {
read_csv(sheets[i])
print(nrow(big_df))
}
sheets
big_df <- foreach(i=1:length(sheets), .combine=rbind) %dopar% {
read_csv(sheets[i])
#print(nrow(big_df))
}
system.time(
big_df <- foreach(i=1:length(sheets), .combine=rbind) %dopar% {
read_csv(sheets[i])
}
)
system.time(
for (i in 1:length(sheets)) {
df <- read_csv(sheets[i])
# if first time looping, save df as big_df
if (i==1) {
big_df <- df
} else {
# if not the first time looping, then rbind it to big_df
big_df <- rbind(big_df, df)
}
print(nrow(big_df))
}
)
